// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AnnualizedFeeSet extends ethereum.Event {
  get params(): AnnualizedFeeSet__Params {
    return new AnnualizedFeeSet__Params(this);
  }
}

export class AnnualizedFeeSet__Params {
  _event: AnnualizedFeeSet;

  constructor(event: AnnualizedFeeSet) {
    this._event = event;
  }

  get fee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Call extends ethereum.Event {
  get params(): Call__Params {
    return new Call__Params(this);
  }
}

export class Call__Params {
  _event: Call;

  constructor(event: Call) {
    this._event = event;
  }

  get caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get target(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get data(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get value(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class CallerAdded extends ethereum.Event {
  get params(): CallerAdded__Params {
    return new CallerAdded__Params(this);
  }
}

export class CallerAdded__Params {
  _event: CallerAdded;

  constructor(event: CallerAdded) {
    this._event = event;
  }

  get caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class CallerRemoved extends ethereum.Event {
  get params(): CallerRemoved__Params {
    return new CallerRemoved__Params(this);
  }
}

export class CallerRemoved__Params {
  _event: CallerRemoved;

  constructor(event: CallerRemoved) {
    this._event = event;
  }

  get caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class CapSet extends ethereum.Event {
  get params(): CapSet__Params {
    return new CapSet__Params(this);
  }
}

export class CapSet__Params {
  _event: CapSet;

  constructor(event: CapSet) {
    this._event = event;
  }

  get cap(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class EntryFeeBeneficiaryShareSet extends ethereum.Event {
  get params(): EntryFeeBeneficiaryShareSet__Params {
    return new EntryFeeBeneficiaryShareSet__Params(this);
  }
}

export class EntryFeeBeneficiaryShareSet__Params {
  _event: EntryFeeBeneficiaryShareSet;

  constructor(event: EntryFeeBeneficiaryShareSet) {
    this._event = event;
  }

  get share(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class EntryFeeSet extends ethereum.Event {
  get params(): EntryFeeSet__Params {
    return new EntryFeeSet__Params(this);
  }
}

export class EntryFeeSet__Params {
  _event: EntryFeeSet;

  constructor(event: EntryFeeSet) {
    this._event = event;
  }

  get fee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ExitFeeBeneficiaryShareSet extends ethereum.Event {
  get params(): ExitFeeBeneficiaryShareSet__Params {
    return new ExitFeeBeneficiaryShareSet__Params(this);
  }
}

export class ExitFeeBeneficiaryShareSet__Params {
  _event: ExitFeeBeneficiaryShareSet;

  constructor(event: ExitFeeBeneficiaryShareSet) {
    this._event = event;
  }

  get share(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ExitFeeSet extends ethereum.Event {
  get params(): ExitFeeSet__Params {
    return new ExitFeeSet__Params(this);
  }
}

export class ExitFeeSet__Params {
  _event: ExitFeeSet;

  constructor(event: ExitFeeSet) {
    this._event = event;
  }

  get fee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class FeeBeneficiarySet extends ethereum.Event {
  get params(): FeeBeneficiarySet__Params {
    return new FeeBeneficiarySet__Params(this);
  }
}

export class FeeBeneficiarySet__Params {
  _event: FeeBeneficiarySet;

  constructor(event: FeeBeneficiarySet) {
    this._event = event;
  }

  get beneficiary(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class FeeCharged extends ethereum.Event {
  get params(): FeeCharged__Params {
    return new FeeCharged__Params(this);
  }
}

export class FeeCharged__Params {
  _event: FeeCharged;

  constructor(event: FeeCharged) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class LockSet extends ethereum.Event {
  get params(): LockSet__Params {
    return new LockSet__Params(this);
  }
}

export class LockSet__Params {
  _event: LockSet;

  constructor(event: LockSet) {
    this._event = event;
  }

  get lockBlock(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PoolExited extends ethereum.Event {
  get params(): PoolExited__Params {
    return new PoolExited__Params(this);
  }
}

export class PoolExited__Params {
  _event: PoolExited;

  constructor(event: PoolExited) {
    this._event = event;
  }

  get who(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PoolJoined extends ethereum.Event {
  get params(): PoolJoined__Params {
    return new PoolJoined__Params(this);
  }
}

export class PoolJoined__Params {
  _event: PoolJoined;

  constructor(event: PoolJoined) {
    this._event = event;
  }

  get who(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TokenAdded extends ethereum.Event {
  get params(): TokenAdded__Params {
    return new TokenAdded__Params(this);
  }
}

export class TokenAdded__Params {
  _event: TokenAdded;

  constructor(event: TokenAdded) {
    this._event = event;
  }

  get _token(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class TokenRemoved extends ethereum.Event {
  get params(): TokenRemoved__Params {
    return new TokenRemoved__Params(this);
  }
}

export class TokenRemoved__Params {
  _event: TokenRemoved;

  constructor(event: TokenRemoved) {
    this._event = event;
  }

  get _token(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Ypie__calcTokensForAmountResult {
  value0: Array<Address>;
  value1: Array<BigInt>;

  constructor(value0: Array<Address>, value1: Array<BigInt>) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    return map;
  }
}

export class Ypie__calcTokensForAmountExitResult {
  value0: Array<Address>;
  value1: Array<BigInt>;

  constructor(value0: Array<Address>, value1: Array<BigInt>) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    return map;
  }
}

export class Ypie extends ethereum.SmartContract {
  static bind(address: Address): Ypie {
    return new Ypie("Ypie", address);
  }

  allowance(owner: Address, spender: Address): BigInt {
    let result = super.call(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)]
    );

    return result[0].toBigInt();
  }

  try_allowance(owner: Address, spender: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  approve(spender: Address, amount: BigInt): boolean {
    let result = super.call("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBoolean();
  }

  try_approve(spender: Address, amount: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  balance(_token: Address): BigInt {
    let result = super.call("balance", "balance(address):(uint256)", [
      ethereum.Value.fromAddress(_token)
    ]);

    return result[0].toBigInt();
  }

  try_balance(_token: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balance", "balance(address):(uint256)", [
      ethereum.Value.fromAddress(_token)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOf(account: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calcOutStandingAnnualizedFee(): BigInt {
    let result = super.call(
      "calcOutStandingAnnualizedFee",
      "calcOutStandingAnnualizedFee():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_calcOutStandingAnnualizedFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calcOutStandingAnnualizedFee",
      "calcOutStandingAnnualizedFee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calcTokensForAmount(_amount: BigInt): Ypie__calcTokensForAmountResult {
    let result = super.call(
      "calcTokensForAmount",
      "calcTokensForAmount(uint256):(address[],uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_amount)]
    );

    return new Ypie__calcTokensForAmountResult(
      result[0].toAddressArray(),
      result[1].toBigIntArray()
    );
  }

  try_calcTokensForAmount(
    _amount: BigInt
  ): ethereum.CallResult<Ypie__calcTokensForAmountResult> {
    let result = super.tryCall(
      "calcTokensForAmount",
      "calcTokensForAmount(uint256):(address[],uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_amount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Ypie__calcTokensForAmountResult(
        value[0].toAddressArray(),
        value[1].toBigIntArray()
      )
    );
  }

  calcTokensForAmountExit(
    _amount: BigInt
  ): Ypie__calcTokensForAmountExitResult {
    let result = super.call(
      "calcTokensForAmountExit",
      "calcTokensForAmountExit(uint256):(address[],uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_amount)]
    );

    return new Ypie__calcTokensForAmountExitResult(
      result[0].toAddressArray(),
      result[1].toBigIntArray()
    );
  }

  try_calcTokensForAmountExit(
    _amount: BigInt
  ): ethereum.CallResult<Ypie__calcTokensForAmountExitResult> {
    let result = super.tryCall(
      "calcTokensForAmountExit",
      "calcTokensForAmountExit(uint256):(address[],uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_amount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Ypie__calcTokensForAmountExitResult(
        value[0].toAddressArray(),
        value[1].toBigIntArray()
      )
    );
  }

  canCall(_caller: Address): boolean {
    let result = super.call("canCall", "canCall(address):(bool)", [
      ethereum.Value.fromAddress(_caller)
    ]);

    return result[0].toBoolean();
  }

  try_canCall(_caller: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("canCall", "canCall(address):(bool)", [
      ethereum.Value.fromAddress(_caller)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  decimals(): i32 {
    let result = super.call("decimals", "decimals():(uint8)", []);

    return result[0].toI32();
  }

  try_decimals(): ethereum.CallResult<i32> {
    let result = super.tryCall("decimals", "decimals():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  decreaseApproval(_spender: Address, _amount: BigInt): boolean {
    let result = super.call(
      "decreaseApproval",
      "decreaseApproval(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_spender),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );

    return result[0].toBoolean();
  }

  try_decreaseApproval(
    _spender: Address,
    _amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "decreaseApproval",
      "decreaseApproval(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_spender),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getAnnualizedFee(): BigInt {
    let result = super.call(
      "getAnnualizedFee",
      "getAnnualizedFee():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getAnnualizedFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAnnualizedFee",
      "getAnnualizedFee():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCallers(): Array<Address> {
    let result = super.call("getCallers", "getCallers():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getCallers(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("getCallers", "getCallers():(address[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getCap(): BigInt {
    let result = super.call("getCap", "getCap():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getCap(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getCap", "getCap():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getEntryFee(): BigInt {
    let result = super.call("getEntryFee", "getEntryFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getEntryFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getEntryFee", "getEntryFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getEntryFeeBeneficiaryShare(): BigInt {
    let result = super.call(
      "getEntryFeeBeneficiaryShare",
      "getEntryFeeBeneficiaryShare():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getEntryFeeBeneficiaryShare(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getEntryFeeBeneficiaryShare",
      "getEntryFeeBeneficiaryShare():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getExitFee(): BigInt {
    let result = super.call("getExitFee", "getExitFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getExitFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getExitFee", "getExitFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getExitFeeBeneficiaryShare(): BigInt {
    let result = super.call(
      "getExitFeeBeneficiaryShare",
      "getExitFeeBeneficiaryShare():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getExitFeeBeneficiaryShare(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getExitFeeBeneficiaryShare",
      "getExitFeeBeneficiaryShare():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFeeBeneficiary(): Address {
    let result = super.call(
      "getFeeBeneficiary",
      "getFeeBeneficiary():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getFeeBeneficiary(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getFeeBeneficiary",
      "getFeeBeneficiary():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getLock(): boolean {
    let result = super.call("getLock", "getLock():(bool)", []);

    return result[0].toBoolean();
  }

  try_getLock(): ethereum.CallResult<boolean> {
    let result = super.tryCall("getLock", "getLock():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getLockBlock(): BigInt {
    let result = super.call("getLockBlock", "getLockBlock():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getLockBlock(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getLockBlock", "getLockBlock():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTokenInPool(_token: Address): boolean {
    let result = super.call(
      "getTokenInPool",
      "getTokenInPool(address):(bool)",
      [ethereum.Value.fromAddress(_token)]
    );

    return result[0].toBoolean();
  }

  try_getTokenInPool(_token: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getTokenInPool",
      "getTokenInPool(address):(bool)",
      [ethereum.Value.fromAddress(_token)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getTokens(): Array<Address> {
    let result = super.call("getTokens", "getTokens():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getTokens(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("getTokens", "getTokens():(address[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  increaseApproval(_spender: Address, _amount: BigInt): boolean {
    let result = super.call(
      "increaseApproval",
      "increaseApproval(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_spender),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );

    return result[0].toBoolean();
  }

  try_increaseApproval(
    _spender: Address,
    _amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "increaseApproval",
      "increaseApproval(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_spender),
        ethereum.Value.fromUnsignedBigInt(_amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  transfer(recipient: Address, amount: BigInt): boolean {
    let result = super.call("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(recipient),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBoolean();
  }

  try_transfer(
    recipient: Address,
    amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(recipient),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  transferFrom(sender: Address, recipient: Address, amount: BigInt): boolean {
    let result = super.call(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(sender),
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );

    return result[0].toBoolean();
  }

  try_transferFrom(
    sender: Address,
    recipient: Address,
    amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(sender),
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class AddCallerCall extends ethereum.Call {
  get inputs(): AddCallerCall__Inputs {
    return new AddCallerCall__Inputs(this);
  }

  get outputs(): AddCallerCall__Outputs {
    return new AddCallerCall__Outputs(this);
  }
}

export class AddCallerCall__Inputs {
  _call: AddCallerCall;

  constructor(call: AddCallerCall) {
    this._call = call;
  }

  get _caller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddCallerCall__Outputs {
  _call: AddCallerCall;

  constructor(call: AddCallerCall) {
    this._call = call;
  }
}

export class AddTokenCall extends ethereum.Call {
  get inputs(): AddTokenCall__Inputs {
    return new AddTokenCall__Inputs(this);
  }

  get outputs(): AddTokenCall__Outputs {
    return new AddTokenCall__Outputs(this);
  }
}

export class AddTokenCall__Inputs {
  _call: AddTokenCall;

  constructor(call: AddTokenCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddTokenCall__Outputs {
  _call: AddTokenCall;

  constructor(call: AddTokenCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class BurnCall extends ethereum.Call {
  get inputs(): BurnCall__Inputs {
    return new BurnCall__Inputs(this);
  }

  get outputs(): BurnCall__Outputs {
    return new BurnCall__Outputs(this);
  }
}

export class BurnCall__Inputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BurnCall__Outputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }
}

export class CallCall extends ethereum.Call {
  get inputs(): CallCall__Inputs {
    return new CallCall__Inputs(this);
  }

  get outputs(): CallCall__Outputs {
    return new CallCall__Outputs(this);
  }
}

export class CallCall__Inputs {
  _call: CallCall;

  constructor(call: CallCall) {
    this._call = call;
  }

  get _targets(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _calldata(): Array<Bytes> {
    return this._call.inputValues[1].value.toBytesArray();
  }

  get _values(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class CallCall__Outputs {
  _call: CallCall;

  constructor(call: CallCall) {
    this._call = call;
  }
}

export class CallNoValueCall extends ethereum.Call {
  get inputs(): CallNoValueCall__Inputs {
    return new CallNoValueCall__Inputs(this);
  }

  get outputs(): CallNoValueCall__Outputs {
    return new CallNoValueCall__Outputs(this);
  }
}

export class CallNoValueCall__Inputs {
  _call: CallNoValueCall;

  constructor(call: CallNoValueCall) {
    this._call = call;
  }

  get _targets(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _calldata(): Array<Bytes> {
    return this._call.inputValues[1].value.toBytesArray();
  }
}

export class CallNoValueCall__Outputs {
  _call: CallNoValueCall;

  constructor(call: CallNoValueCall) {
    this._call = call;
  }
}

export class ChargeOutstandingAnnualizedFeeCall extends ethereum.Call {
  get inputs(): ChargeOutstandingAnnualizedFeeCall__Inputs {
    return new ChargeOutstandingAnnualizedFeeCall__Inputs(this);
  }

  get outputs(): ChargeOutstandingAnnualizedFeeCall__Outputs {
    return new ChargeOutstandingAnnualizedFeeCall__Outputs(this);
  }
}

export class ChargeOutstandingAnnualizedFeeCall__Inputs {
  _call: ChargeOutstandingAnnualizedFeeCall;

  constructor(call: ChargeOutstandingAnnualizedFeeCall) {
    this._call = call;
  }
}

export class ChargeOutstandingAnnualizedFeeCall__Outputs {
  _call: ChargeOutstandingAnnualizedFeeCall;

  constructor(call: ChargeOutstandingAnnualizedFeeCall) {
    this._call = call;
  }
}

export class DecreaseApprovalCall extends ethereum.Call {
  get inputs(): DecreaseApprovalCall__Inputs {
    return new DecreaseApprovalCall__Inputs(this);
  }

  get outputs(): DecreaseApprovalCall__Outputs {
    return new DecreaseApprovalCall__Outputs(this);
  }
}

export class DecreaseApprovalCall__Inputs {
  _call: DecreaseApprovalCall;

  constructor(call: DecreaseApprovalCall) {
    this._call = call;
  }

  get _spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DecreaseApprovalCall__Outputs {
  _call: DecreaseApprovalCall;

  constructor(call: DecreaseApprovalCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ExitPoolCall extends ethereum.Call {
  get inputs(): ExitPoolCall__Inputs {
    return new ExitPoolCall__Inputs(this);
  }

  get outputs(): ExitPoolCall__Outputs {
    return new ExitPoolCall__Outputs(this);
  }
}

export class ExitPoolCall__Inputs {
  _call: ExitPoolCall;

  constructor(call: ExitPoolCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ExitPoolCall__Outputs {
  _call: ExitPoolCall;

  constructor(call: ExitPoolCall) {
    this._call = call;
  }
}

export class IncreaseApprovalCall extends ethereum.Call {
  get inputs(): IncreaseApprovalCall__Inputs {
    return new IncreaseApprovalCall__Inputs(this);
  }

  get outputs(): IncreaseApprovalCall__Outputs {
    return new IncreaseApprovalCall__Outputs(this);
  }
}

export class IncreaseApprovalCall__Inputs {
  _call: IncreaseApprovalCall;

  constructor(call: IncreaseApprovalCall) {
    this._call = call;
  }

  get _spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class IncreaseApprovalCall__Outputs {
  _call: IncreaseApprovalCall;

  constructor(call: IncreaseApprovalCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _initialSupply(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _symbol(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class JoinPoolCall extends ethereum.Call {
  get inputs(): JoinPoolCall__Inputs {
    return new JoinPoolCall__Inputs(this);
  }

  get outputs(): JoinPoolCall__Outputs {
    return new JoinPoolCall__Outputs(this);
  }
}

export class JoinPoolCall__Inputs {
  _call: JoinPoolCall;

  constructor(call: JoinPoolCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class JoinPoolCall__Outputs {
  _call: JoinPoolCall;

  constructor(call: JoinPoolCall) {
    this._call = call;
  }
}

export class MintCall extends ethereum.Call {
  get inputs(): MintCall__Inputs {
    return new MintCall__Inputs(this);
  }

  get outputs(): MintCall__Outputs {
    return new MintCall__Outputs(this);
  }
}

export class MintCall__Inputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get _receiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class MintCall__Outputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }
}

export class RemoveCallerCall extends ethereum.Call {
  get inputs(): RemoveCallerCall__Inputs {
    return new RemoveCallerCall__Inputs(this);
  }

  get outputs(): RemoveCallerCall__Outputs {
    return new RemoveCallerCall__Outputs(this);
  }
}

export class RemoveCallerCall__Inputs {
  _call: RemoveCallerCall;

  constructor(call: RemoveCallerCall) {
    this._call = call;
  }

  get _caller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveCallerCall__Outputs {
  _call: RemoveCallerCall;

  constructor(call: RemoveCallerCall) {
    this._call = call;
  }
}

export class RemoveTokenCall extends ethereum.Call {
  get inputs(): RemoveTokenCall__Inputs {
    return new RemoveTokenCall__Inputs(this);
  }

  get outputs(): RemoveTokenCall__Outputs {
    return new RemoveTokenCall__Outputs(this);
  }
}

export class RemoveTokenCall__Inputs {
  _call: RemoveTokenCall;

  constructor(call: RemoveTokenCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveTokenCall__Outputs {
  _call: RemoveTokenCall;

  constructor(call: RemoveTokenCall) {
    this._call = call;
  }
}

export class SetAnnualizedFeeCall extends ethereum.Call {
  get inputs(): SetAnnualizedFeeCall__Inputs {
    return new SetAnnualizedFeeCall__Inputs(this);
  }

  get outputs(): SetAnnualizedFeeCall__Outputs {
    return new SetAnnualizedFeeCall__Outputs(this);
  }
}

export class SetAnnualizedFeeCall__Inputs {
  _call: SetAnnualizedFeeCall;

  constructor(call: SetAnnualizedFeeCall) {
    this._call = call;
  }

  get _fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetAnnualizedFeeCall__Outputs {
  _call: SetAnnualizedFeeCall;

  constructor(call: SetAnnualizedFeeCall) {
    this._call = call;
  }
}

export class SetCapCall extends ethereum.Call {
  get inputs(): SetCapCall__Inputs {
    return new SetCapCall__Inputs(this);
  }

  get outputs(): SetCapCall__Outputs {
    return new SetCapCall__Outputs(this);
  }
}

export class SetCapCall__Inputs {
  _call: SetCapCall;

  constructor(call: SetCapCall) {
    this._call = call;
  }

  get _maxCap(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetCapCall__Outputs {
  _call: SetCapCall;

  constructor(call: SetCapCall) {
    this._call = call;
  }
}

export class SetEntryFeeCall extends ethereum.Call {
  get inputs(): SetEntryFeeCall__Inputs {
    return new SetEntryFeeCall__Inputs(this);
  }

  get outputs(): SetEntryFeeCall__Outputs {
    return new SetEntryFeeCall__Outputs(this);
  }
}

export class SetEntryFeeCall__Inputs {
  _call: SetEntryFeeCall;

  constructor(call: SetEntryFeeCall) {
    this._call = call;
  }

  get _fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetEntryFeeCall__Outputs {
  _call: SetEntryFeeCall;

  constructor(call: SetEntryFeeCall) {
    this._call = call;
  }
}

export class SetEntryFeeBeneficiaryShareCall extends ethereum.Call {
  get inputs(): SetEntryFeeBeneficiaryShareCall__Inputs {
    return new SetEntryFeeBeneficiaryShareCall__Inputs(this);
  }

  get outputs(): SetEntryFeeBeneficiaryShareCall__Outputs {
    return new SetEntryFeeBeneficiaryShareCall__Outputs(this);
  }
}

export class SetEntryFeeBeneficiaryShareCall__Inputs {
  _call: SetEntryFeeBeneficiaryShareCall;

  constructor(call: SetEntryFeeBeneficiaryShareCall) {
    this._call = call;
  }

  get _share(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetEntryFeeBeneficiaryShareCall__Outputs {
  _call: SetEntryFeeBeneficiaryShareCall;

  constructor(call: SetEntryFeeBeneficiaryShareCall) {
    this._call = call;
  }
}

export class SetExitFeeCall extends ethereum.Call {
  get inputs(): SetExitFeeCall__Inputs {
    return new SetExitFeeCall__Inputs(this);
  }

  get outputs(): SetExitFeeCall__Outputs {
    return new SetExitFeeCall__Outputs(this);
  }
}

export class SetExitFeeCall__Inputs {
  _call: SetExitFeeCall;

  constructor(call: SetExitFeeCall) {
    this._call = call;
  }

  get _fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetExitFeeCall__Outputs {
  _call: SetExitFeeCall;

  constructor(call: SetExitFeeCall) {
    this._call = call;
  }
}

export class SetExitFeeBeneficiaryShareCall extends ethereum.Call {
  get inputs(): SetExitFeeBeneficiaryShareCall__Inputs {
    return new SetExitFeeBeneficiaryShareCall__Inputs(this);
  }

  get outputs(): SetExitFeeBeneficiaryShareCall__Outputs {
    return new SetExitFeeBeneficiaryShareCall__Outputs(this);
  }
}

export class SetExitFeeBeneficiaryShareCall__Inputs {
  _call: SetExitFeeBeneficiaryShareCall;

  constructor(call: SetExitFeeBeneficiaryShareCall) {
    this._call = call;
  }

  get _share(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetExitFeeBeneficiaryShareCall__Outputs {
  _call: SetExitFeeBeneficiaryShareCall;

  constructor(call: SetExitFeeBeneficiaryShareCall) {
    this._call = call;
  }
}

export class SetFeeBeneficiaryCall extends ethereum.Call {
  get inputs(): SetFeeBeneficiaryCall__Inputs {
    return new SetFeeBeneficiaryCall__Inputs(this);
  }

  get outputs(): SetFeeBeneficiaryCall__Outputs {
    return new SetFeeBeneficiaryCall__Outputs(this);
  }
}

export class SetFeeBeneficiaryCall__Inputs {
  _call: SetFeeBeneficiaryCall;

  constructor(call: SetFeeBeneficiaryCall) {
    this._call = call;
  }

  get _beneficiary(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeeBeneficiaryCall__Outputs {
  _call: SetFeeBeneficiaryCall;

  constructor(call: SetFeeBeneficiaryCall) {
    this._call = call;
  }
}

export class SetLockCall extends ethereum.Call {
  get inputs(): SetLockCall__Inputs {
    return new SetLockCall__Inputs(this);
  }

  get outputs(): SetLockCall__Outputs {
    return new SetLockCall__Outputs(this);
  }
}

export class SetLockCall__Inputs {
  _call: SetLockCall;

  constructor(call: SetLockCall) {
    this._call = call;
  }

  get _lock(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetLockCall__Outputs {
  _call: SetLockCall;

  constructor(call: SetLockCall) {
    this._call = call;
  }
}

export class SingleCallCall extends ethereum.Call {
  get inputs(): SingleCallCall__Inputs {
    return new SingleCallCall__Inputs(this);
  }

  get outputs(): SingleCallCall__Outputs {
    return new SingleCallCall__Outputs(this);
  }
}

export class SingleCallCall__Inputs {
  _call: SingleCallCall;

  constructor(call: SingleCallCall) {
    this._call = call;
  }

  get _target(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _calldata(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _value(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SingleCallCall__Outputs {
  _call: SingleCallCall;

  constructor(call: SingleCallCall) {
    this._call = call;
  }
}

export class TransferCall extends ethereum.Call {
  get inputs(): TransferCall__Inputs {
    return new TransferCall__Inputs(this);
  }

  get outputs(): TransferCall__Outputs {
    return new TransferCall__Outputs(this);
  }
}

export class TransferCall__Inputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferCall__Outputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get _newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
